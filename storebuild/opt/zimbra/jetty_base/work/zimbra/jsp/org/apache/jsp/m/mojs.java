/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2017-12-12 06:44:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.m;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mojs extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("zm:yuiCompress", com.zimbra.cs.taglib.bean.BeanUtils.class, "yuiCompress", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/tags/imginfo.tag", Long.valueOf(1512680905000L));
    _jspx_dependants.put("/WEB-INF/tags/mobile/moJS-iPad.tag", Long.valueOf(1512680905000L));
    _jspx_dependants.put("/WEB-INF/tags/imgurl.tag", Long.valueOf(1512680905000L));
    _jspx_dependants.put("/WEB-INF/tags/mobile/moJS.tag", Long.valueOf(1512680905000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/javascript; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("/*\n * ***** BEGIN LICENSE BLOCK *****\n * Zimbra Collaboration Suite Web Client\n * Copyright (C) 2008, 2009, 2010, 2013, 2014, 2016 Synacor, Inc.\n *\n * This program is free software: you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software Foundation,\n * version 2 of the License.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License along with this program.\n * If not, see <https://www.gnu.org/licenses/>.\n * ***** END LICENSE BLOCK *****\n */\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /m/mojs(25,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty mailbox}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          //  zm:getMailbox
          com.zimbra.cs.taglib.tag.GetMailboxTag _jspx_th_zm_005fgetMailbox_005f0 = (new com.zimbra.cs.taglib.tag.GetMailboxTag());
          _jsp_instancemanager.newInstance(_jspx_th_zm_005fgetMailbox_005f0);
          _jspx_th_zm_005fgetMailbox_005f0.setJspContext(_jspx_page_context);
          _jspx_th_zm_005fgetMailbox_005f0.setParent(_jspx_th_c_005fif_005f0);
          // /m/mojs(26,4) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
          _jspx_th_zm_005fgetMailbox_005f0.setVar("mailbox");
          _jspx_th_zm_005fgetMailbox_005f0.doTag();
          com.zimbra.cs.taglib.bean.ZMailboxBean mailbox = null;
          mailbox = (com.zimbra.cs.taglib.bean.ZMailboxBean) _jspx_page_context.findAttribute("mailbox");
          _jsp_instancemanager.destroyInstance(_jspx_th_zm_005fgetMailbox_005f0);
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${js}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent(null);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /m/mojs(29,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.zms eq 'ipad'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
          return true;
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
    // /m/mojs(30,12) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setScope("page");
    // /m/mojs(30,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("js");
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_c_005fset_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_c_005fset_005f0.doInitBody();
      }
      do {
        if (_jspx_meth_mo_005fipadjs_005f0(_jspx_th_c_005fset_005f0, _jspx_page_context))
          return true;
        int evalDoAfterBody = _jspx_th_c_005fset_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_mo_005fipadjs_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fset_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mo:ipadjs
    org.apache.jsp.tag.webmobile.moJS_002diPad_tag _jspx_th_mo_005fipadjs_005f0 = (new org.apache.jsp.tag.webmobile.moJS_002diPad_tag());
    _jsp_instancemanager.newInstance(_jspx_th_mo_005fipadjs_005f0);
    _jspx_th_mo_005fipadjs_005f0.setJspContext(_jspx_page_context);
    _jspx_th_mo_005fipadjs_005f0.setParent(_jspx_th_c_005fset_005f0);
    // /m/mojs(31,16) name = mailbox type = com.zimbra.cs.taglib.bean.ZMailboxBean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
    _jspx_th_mo_005fipadjs_005f0.setMailbox((com.zimbra.cs.taglib.bean.ZMailboxBean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mailbox}", com.zimbra.cs.taglib.bean.ZMailboxBean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    // /m/mojs(31,16) name = scriptTag type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
    _jspx_th_mo_005fipadjs_005f0.setScriptTag((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${false}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    _jspx_th_mo_005fipadjs_005f0.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_mo_005fipadjs_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        if (_jspx_meth_c_005fset_005f1(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
          return true;
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
    // /m/mojs(35,12) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setScope("page");
    // /m/mojs(35,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("js");
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_c_005fset_005f1.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_c_005fset_005f1.doInitBody();
      }
      do {
        if (_jspx_meth_mo_005fjs_005f0(_jspx_th_c_005fset_005f1, _jspx_page_context))
          return true;
        int evalDoAfterBody = _jspx_th_c_005fset_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_c_005fset_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope.reuse(_jspx_th_c_005fset_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fscope.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }

  private boolean _jspx_meth_mo_005fjs_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fset_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mo:js
    org.apache.jsp.tag.webmobile.moJS_tag _jspx_th_mo_005fjs_005f0 = (new org.apache.jsp.tag.webmobile.moJS_tag());
    _jsp_instancemanager.newInstance(_jspx_th_mo_005fjs_005f0);
    _jspx_th_mo_005fjs_005f0.setJspContext(_jspx_page_context);
    _jspx_th_mo_005fjs_005f0.setParent(_jspx_th_c_005fset_005f1);
    // /m/mojs(36,16) name = mailbox type = com.zimbra.cs.taglib.bean.ZMailboxBean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
    _jspx_th_mo_005fjs_005f0.setMailbox((com.zimbra.cs.taglib.bean.ZMailboxBean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mailbox}", com.zimbra.cs.taglib.bean.ZMailboxBean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    // /m/mojs(36,16) name = scriptTag type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
    _jspx_th_mo_005fjs_005f0.setScriptTag((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${false}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    _jspx_th_mo_005fjs_005f0.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_mo_005fjs_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /m/mojs(40,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty param.dev}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        if (_jspx_meth_c_005fset_005f2(_jspx_th_c_005fif_005f1, _jspx_page_context))
          return true;
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
    // /m/mojs(41,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setVar("js");
    // /m/mojs(41,4) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/m/mojs(41,4) '${zm:yuiCompress(js,'js')}'",_el_expressionfactory.createValueExpression(new org.apache.jasper.el.ELContextWrapper(_jspx_page_context.getELContext(),_jspx_fnmap_0),"${zm:yuiCompress(js,'js')}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
    if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f2.setParent(null);
    // /m/mojs(44,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ua.isiPad eq true}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
    if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n/**\n *\n * Find more about the scrolling function at\n * http://cubiq.org/iscroll\n *\n * Copyright (c) 2010 Matteo Spinelli, http://cubiq.org/\n * Released under MIT license\n * http://cubiq.org/dropbox/mit-license.txt\n *\n * Version 3.7.1 - Last updated: 2010.10.08\n *\n */\n\n(function(){\nfunction iScroll (el, options) {\n\tvar that = this, i;\n\tthat.element = typeof el == 'object' ? el : document.getElementById(el);\n\tthat.wrapper = that.element.parentNode;\n\n\tthat.element.style.webkitTransitionProperty = '-webkit-transform';\n\tthat.element.style.webkitTransitionTimingFunction = 'cubic-bezier(0,0,0.25,1)';\n\tthat.element.style.webkitTransitionDuration = '0';\n\tthat.element.style.webkitTransform = translateOpen + '0,0' + translateClose;\n\n\t// Default options\n\tthat.options = {\n\t\tbounce: has3d,\n\t\tmomentum: has3d,\n\t\tcheckDOMChanges: true,\n\t\ttopOnDOMChanges: false,\n\t\thScrollbar: has3d,\n\t\tvScrollbar: has3d,\n\t\tfadeScrollbar: isIthing || !isTouch,\n\t\tshrinkScrollbar: isIthing || !isTouch,\n\t\tdesktopCompatibility: false,\n\t\toverflow: 'auto',\n");
        out.write("\t\tsnap: false,\n\t\tbounceLock: false,\n\t\tscrollbarColor: 'rgba(0,0,0,0.5)',\n\t\tonScrollEnd: function () {}\n\t};\n\n\t// User defined options\n\tif (typeof options == 'object') {\n\t\tfor (i in options) {\n\t\t\tthat.options[i] = options[i];\n\t\t}\n\t}\n\n\tif (that.options.desktopCompatibility) {\n\t\tthat.options.overflow = 'hidden';\n\t}\n\n\tthat.onScrollEnd = that.options.onScrollEnd;\n\tdelete that.options.onScrollEnd;\n\n\tthat.wrapper.style.overflow = that.options.overflow;\n\n\tthat.refresh();\n\n\twindow.addEventListener('onorientationchange' in window ? 'orientationchange' : 'resize', that, false);\n\n\tif (isTouch || that.options.desktopCompatibility) {\n\t\tthat.element.addEventListener(START_EVENT, that, false);\n\t\tthat.element.addEventListener(MOVE_EVENT, that, false);\n\t\tthat.element.addEventListener(END_EVENT, that, false);\n\t}\n\n\tif (that.options.checkDOMChanges) {\n\t\tthat.element.addEventListener('DOMSubtreeModified', that, false);\n\t}\n}\n\niScroll.prototype = {\n\tx: 0,\n\ty: 0,\n\tenabled: true,\n\n\thandleEvent: function (e) {\n\t\tvar that = this;\n\n\t\tswitch (e.type) {\n");
        out.write("\t\t\tcase START_EVENT:\n\t\t\t\tthat.touchStart(e);\n\t\t\t\tbreak;\n\t\t\tcase MOVE_EVENT:\n\t\t\t\tthat.touchMove(e);\n\t\t\t\tbreak;\n\t\t\tcase END_EVENT:\n\t\t\t\tthat.touchEnd(e);\n\t\t\t\tbreak;\n\t\t\tcase 'webkitTransitionEnd':\n\t\t\t\tthat.transitionEnd();\n\t\t\t\tbreak;\n\t\t\tcase 'orientationchange':\n\t\t\tcase 'resize':\n\t\t\t\tthat.refresh();\n\t\t\t\tbreak;\n\t\t\tcase 'DOMSubtreeModified':\n\t\t\t\tthat.onDOMModified(e);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\n\tonDOMModified: function (e) {\n\t\tvar that = this;\n\n\t\t// (Hopefully) execute onDOMModified only once\n\t\tif (e.target.parentNode != that.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(function () { that.refresh(); }, 0);\n\n\t\tif (that.options.topOnDOMChanges && (that.x!=0 || that.y!=0)) {\n\t\t\tthat.scrollTo(0,0,'0');\n\t\t}\n\t},\n\n\trefresh: function () {\n\t\tvar that = this,\n\t\t\tresetX = that.x, resetY = that.y,\n\t\t\tsnap;\n\n\t\tthat.scrollWidth = that.wrapper.clientWidth;\n\t\tthat.scrollHeight = that.wrapper.clientHeight;\n\t\tthat.scrollerWidth = that.element.offsetWidth;\n\t\tthat.scrollerHeight = that.element.offsetHeight;\n\t\tthat.maxScrollX = that.scrollWidth - that.scrollerWidth;\n");
        out.write("\t\tthat.maxScrollY = that.scrollHeight - that.scrollerHeight;\n\t\tthat.directionX = 0;\n\t\tthat.directionY = 0;\n\n\t\tif (that.scrollX) {\n\t\t\tif (that.maxScrollX >= 0) {\n\t\t\t\tresetX = 0;\n\t\t\t} else if (that.x < that.maxScrollX) {\n\t\t\t\tresetX = that.maxScrollX;\n\t\t\t}\n\t\t}\n\t\tif (that.scrollY) {\n\t\t\tif (that.maxScrollY >= 0) {\n\t\t\t\tresetY = 0;\n\t\t\t} else if (that.y < that.maxScrollY) {\n\t\t\t\tresetY = that.maxScrollY;\n\t\t\t}\n\t\t}\n\n\t\t// Snap\n\t\tif (that.options.snap) {\n\t\t\tthat.maxPageX = -Math.floor(that.maxScrollX/that.scrollWidth);\n\t\t\tthat.maxPageY = -Math.floor(that.maxScrollY/that.scrollHeight);\n\n\t\t\tsnap = that.snap(resetX, resetY);\n\t\t\tresetX = snap.x;\n\t\t\tresetY = snap.y;\n\t\t}\n\n\t\tif (resetX!=that.x || resetY!=that.y) {\n\t\t\tthat.setTransitionTime('0');\n\t\t\tthat.setPosition(resetX, resetY, true);\n\t\t}\n\n\t\tthat.scrollX = that.scrollerWidth > that.scrollWidth;\n\t\tthat.scrollY = !that.options.bounceLock && !that.scrollX || that.scrollerHeight > that.scrollHeight;\n\n\t\t// Update horizontal scrollbar\n\t\tif (that.options.hScrollbar && that.scrollX) {\n");
        out.write("\t\t\tthat.scrollBarX = that.scrollBarX || new scrollbar('horizontal', that.wrapper, that.options.fadeScrollbar, that.options.shrinkScrollbar, that.options.scrollbarColor);\n\t\t\tthat.scrollBarX.init(that.scrollWidth, that.scrollerWidth);\n\t\t} else if (that.scrollBarX) {\n\t\t\tthat.scrollBarX = that.scrollBarX.remove();\n\t\t}\n\n\t\t// Update vertical scrollbar\n\t\tif (that.options.vScrollbar && that.scrollY && that.scrollerHeight > that.scrollHeight) {\n\t\t\tthat.scrollBarY = that.scrollBarY || new scrollbar('vertical', that.wrapper, that.options.fadeScrollbar, that.options.shrinkScrollbar, that.options.scrollbarColor);\n\t\t\tthat.scrollBarY.init(that.scrollHeight, that.scrollerHeight);\n\t\t} else if (that.scrollBarY) {\n\t\t\tthat.scrollBarY = that.scrollBarY.remove();\n\t\t}\n\t},\n\n\tsetPosition: function (x, y, hideScrollBars) {\n\t\tvar that = this;\n\n\t\tthat.x = x;\n\t\tthat.y = y;\n\n\t\tthat.element.style.webkitTransform = translateOpen + that.x + 'px,' + that.y + 'px' + translateClose;\n\n\t\t// Move the scrollbars\n\t\tif (!hideScrollBars) {\n\t\t\tif (that.scrollBarX) {\n");
        out.write("\t\t\t\tthat.scrollBarX.setPosition(that.x);\n\t\t\t}\n\t\t\tif (that.scrollBarY) {\n\t\t\t\tthat.scrollBarY.setPosition(that.y);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetTransitionTime: function(time) {\n\t\tvar that = this;\n\n\t\ttime = time || '0';\n\t\tthat.element.style.webkitTransitionDuration = time;\n\n\t\tif (that.scrollBarX) {\n\t\t\tthat.scrollBarX.bar.style.webkitTransitionDuration = time;\n\t\t\tthat.scrollBarX.wrapper.style.webkitTransitionDuration = has3d && that.options.fadeScrollbar ? '300ms' : '0';\n\t\t}\n\t\tif (that.scrollBarY) {\n\t\t\tthat.scrollBarY.bar.style.webkitTransitionDuration = time;\n\t\t\tthat.scrollBarY.wrapper.style.webkitTransitionDuration = has3d && that.options.fadeScrollbar ? '300ms' : '0';\n\t\t}\n\t},\n\n\ttouchStart: function(e) {\n\t\tvar that = this,\n\t\t\tmatrix;\n\n\t\tif (!that.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(e.target && e.target.nodeName != 'SELECT') { //zhacked to allow select inside iscroll\n\t\t\te.preventDefault();\n\t\t}\n\t\te.stopPropagation();\n\n\t\tthat.scrolling = true;\t\t// This is probably not needed, but may be useful if iScroll is used in conjuction with other frameworks\n");
        out.write("\n\t\tthat.moved = false;\n\t\tthat.distX = 0;\n\t\tthat.distY = 0;\n\n\t\tthat.setTransitionTime('0');\n\n\t\t// Check if the scroller is really where it should be\n\t\tif (that.options.momentum || that.options.snap) {\n\t\t\tmatrix = new WebKitCSSMatrix(window.getComputedStyle(that.element).webkitTransform);\n\t\t\tif (matrix.e != that.x || matrix.f != that.y) {\n\t\t\t\tdocument.removeEventListener('webkitTransitionEnd', that, false);\n\t\t\t\tthat.setPosition(matrix.e, matrix.f);\n\t\t\t\tthat.moved = true;\n\t\t\t}\n\t\t}\n\n\t\tthat.touchStartX = isTouch ? e.changedTouches[0].pageX : e.pageX;\n\t\tthat.scrollStartX = that.x;\n\n\t\tthat.touchStartY = isTouch ? e.changedTouches[0].pageY : e.pageY;\n\t\tthat.scrollStartY = that.y;\n\n\t\tthat.scrollStartTime = e.timeStamp;\n\n\t\tthat.directionX = 0;\n\t\tthat.directionY = 0;\n\t},\n\n\ttouchMove: function(e) {\n\t\tif (!this.scrolling) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\tpageX = isTouch ? e.changedTouches[0].pageX : e.pageX,\n\t\t\tpageY = isTouch ? e.changedTouches[0].pageY : e.pageY,\n\t\t\tleftDelta = that.scrollX ? pageX - that.touchStartX : 0,\n");
        out.write("\t\t\ttopDelta = that.scrollY ? pageY - that.touchStartY : 0,\n\t\t\tnewX = that.x + leftDelta,\n\t\t\tnewY = that.y + topDelta;\n\n\t\t//e.preventDefault();\n\t\te.stopPropagation();\t// Stopping propagation just saves some cpu cycles (I presume)\n\n\t\tthat.touchStartX = pageX;\n\t\tthat.touchStartY = pageY;\n\n\t\t// Slow down if outside of the boundaries\n\t\tif (newX >= 0 || newX < that.maxScrollX) {\n\t\t\tnewX = that.options.bounce ? Math.round(that.x + leftDelta / 3) : (newX >= 0 || that.maxScrollX>=0) ? 0 : that.maxScrollX;\n\t\t}\n\t\tif (newY >= 0 || newY < that.maxScrollY) {\n\t\t\tnewY = that.options.bounce ? Math.round(that.y + topDelta / 3) : (newY >= 0 || that.maxScrollY>=0) ? 0 : that.maxScrollY;\n\t\t}\n\n\t\tif (that.distX + that.distY > 10) {\t\t\t// 5 pixels threshold\n\n\t\t\t// Lock scroll direction\n\t\t\tif (that.distX-3 > that.distY) {\n\t\t\t\tnewY = that.y;\n\t\t\t\ttopDelta = 0;\n\t\t\t} else if (that.distY-3 > that.distX) {\n\t\t\t\tnewX = that.x;\n\t\t\t\tleftDelta = 0;\n\t\t\t}\n\n\t\t\tthat.setPosition(newX, newY);\n\t\t\tthat.moved = true;\n\t\t\tthat.directionX = leftDelta > 0 ? -1 : 1;\n");
        out.write("\t\t\tthat.directionY = topDelta > 0 ? -1 : 1;\n\t\t} else {\n\t\t\tthat.distX+= Math.abs(leftDelta);\n\t\t\tthat.distY+= Math.abs(topDelta);\n//\t\t\tthat.dist+= Math.abs(leftDelta) + Math.abs(topDelta);\n\t\t}\n\t},\n\n\ttouchEnd: function(e) {\n\t\tif (!this.scrolling) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ttime = e.timeStamp - that.scrollStartTime,\n\t\t\tpoint = isTouch ? e.changedTouches[0] : e,\n\t\t\ttarget, ev,\n\t\t\tmomentumX, momentumY,\n\t\t\tnewDuration = 0,\n\t\t\tnewPositionX = that.x, newPositionY = that.y,\n\t\t\tsnap;\n\n\t\tthat.scrolling = false;\n\n\t\tif (!that.moved) {\n\t\t\tthat.resetPosition();\n\n\t\t\tif (isTouch) {\n\t\t\t\t// Find the last touched element\n\t\t\t\ttarget = point.target;\n\t\t\t\twhile (target.nodeType != 1) {\n\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t}\n\n\t\t\t\t// Create the fake event\n\t\t\t\tev = document.createEvent('MouseEvents');\n\t\t\t\tev.initMouseEvent('click', true, true, e.view, 1,\n\t\t\t\t\tpoint.screenX, point.screenY, point.clientX, point.clientY,\n\t\t\t\t\te.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n\t\t\t\t\t0, null);\n\t\t\t\tev._fake = true;\n\t\t\t\ttarget.dispatchEvent(ev);\n");
        out.write("\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!that.options.snap && time > 250) {\t\t\t// Prevent slingshot effect\n\t\t\tthat.resetPosition();\n\t\t\treturn;\n\t\t}\n\n\t\tif (that.options.momentum) {\n\t\t\tmomentumX = that.scrollX === true\n\t\t\t\t? that.momentum(that.x - that.scrollStartX,\n\t\t\t\t\t\t\t\ttime,\n\t\t\t\t\t\t\t\tthat.options.bounce ? -that.x + that.scrollWidth/5 : -that.x,\n\t\t\t\t\t\t\t\tthat.options.bounce ? that.x + that.scrollerWidth - that.scrollWidth + that.scrollWidth/5 : that.x + that.scrollerWidth - that.scrollWidth)\n\t\t\t\t: { dist: 0, time: 0 };\n\n\t\t\tmomentumY = that.scrollY === true\n\t\t\t\t? that.momentum(that.y - that.scrollStartY,\n\t\t\t\t\t\t\t\ttime,\n\t\t\t\t\t\t\t\tthat.options.bounce ? -that.y + that.scrollHeight/5 : -that.y,\n\t\t\t\t\t\t\t\tthat.options.bounce ? (that.maxScrollY < 0 ? that.y + that.scrollerHeight - that.scrollHeight : 0) + that.scrollHeight/5 : that.y + that.scrollerHeight - that.scrollHeight)\n\t\t\t\t: { dist: 0, time: 0 };\n\n\t\t\tnewDuration = Math.max(Math.max(momentumX.time, momentumY.time), 1);\t\t// The minimum animation length must be 1ms\n\t\t\tnewPositionX = that.x + momentumX.dist;\n");
        out.write("\t\t\tnewPositionY = that.y + momentumY.dist;\n\t\t}\n\n\t\tif (that.options.snap) {\n\t\t\tsnap = that.snap(newPositionX, newPositionY);\n\t\t\tnewPositionX = snap.x;\n\t\t\tnewPositionY = snap.y;\n\t\t\tnewDuration = Math.max(snap.time, newDuration);\n\t\t}\n\n\t\tthat.scrollTo(newPositionX, newPositionY, newDuration + 'ms');\n\t},\n\n\ttransitionEnd: function () {\n\t\tvar that = this;\n\t\tdocument.removeEventListener('webkitTransitionEnd', that, false);\n\t\tthat.resetPosition();\n\t},\n\n\tresetPosition: function () {\n\t\tvar that = this,\n\t\t\tresetX = that.x,\n\t\t \tresetY = that.y;\n\n\t\tif (that.x >= 0) {\n\t\t\tresetX = 0;\n\t\t} else if (that.x < that.maxScrollX) {\n\t\t\tresetX = that.maxScrollX;\n\t\t}\n\n\t\tif (that.y >= 0 || that.maxScrollY > 0) {\n\t\t\tresetY = 0;\n\t\t} else if (that.y < that.maxScrollY) {\n\t\t\tresetY = that.maxScrollY;\n\t\t}\n\n\t\tif (resetX != that.x || resetY != that.y) {\n\t\t\tthat.scrollTo(resetX, resetY);\n\t\t} else {\n\t\t\tif (that.moved) {\n\t\t\t\tthat.onScrollEnd();\t\t// Execute custom code on scroll end\n\t\t\t\tthat.moved = false;\n\t\t\t}\n\n\t\t\t// Hide the scrollbars\n\t\t\tif (that.scrollBarX) {\n");
        out.write("\t\t\t\tthat.scrollBarX.hide();\n\t\t\t}\n\t\t\tif (that.scrollBarY) {\n\t\t\t\tthat.scrollBarY.hide();\n\t\t\t}\n\t\t}\n\t},\n\n\tsnap: function (x, y) {\n\t\tvar that = this, time;\n\n\t\tif (that.directionX > 0) {\n\t\t\tx = Math.floor(x/that.scrollWidth);\n\t\t} else if (that.directionX < 0) {\n\t\t\tx = Math.ceil(x/that.scrollWidth);\n\t\t} else {\n\t\t\tx = Math.round(x/that.scrollWidth);\n\t\t}\n\t\tthat.pageX = -x;\n\t\tx = x * that.scrollWidth;\n\t\tif (x > 0) {\n\t\t\tx = that.pageX = 0;\n\t\t} else if (x < that.maxScrollX) {\n\t\t\tthat.pageX = that.maxPageX;\n\t\t\tx = that.maxScrollX;\n\t\t}\n\n\t\tif (that.directionY > 0) {\n\t\t\ty = Math.floor(y/that.scrollHeight);\n\t\t} else if (that.directionY < 0) {\n\t\t\ty = Math.ceil(y/that.scrollHeight);\n\t\t} else {\n\t\t\ty = Math.round(y/that.scrollHeight);\n\t\t}\n\t\tthat.pageY = -y;\n\t\ty = y * that.scrollHeight;\n\t\tif (y > 0) {\n\t\t\ty = that.pageY = 0;\n\t\t} else if (y < that.maxScrollY) {\n\t\t\tthat.pageY = that.maxPageY;\n\t\t\ty = that.maxScrollY;\n\t\t}\n\n\t\t// Snap with constant speed (proportional duration)\n\t\ttime = Math.round(Math.max(\n\t\t\t\tMath.abs(that.x - x) / that.scrollWidth * 500,\n");
        out.write("\t\t\t\tMath.abs(that.y - y) / that.scrollHeight * 500\n\t\t\t));\n\n\t\treturn { x: x, y: y, time: time };\n\t},\n\n\tscrollTo: function (destX, destY, runtime) {\n\t\tvar that = this;\n\n\t\tif (that.x == destX && that.y == destY) {\n\t\t\tthat.resetPosition();\n\t\t\treturn;\n\t\t}\n\n\t\tthat.moved = true;\n\t\tthat.setTransitionTime(runtime || '350ms');\n\t\tthat.setPosition(destX, destY);\n\n\t\tif (runtime==='0' || runtime=='0s' || runtime=='0ms') {\n\t\t\tthat.resetPosition();\n\t\t} else {\n\t\t\tdocument.addEventListener('webkitTransitionEnd', that, false);\t// At the end of the transition check if we are still inside of the boundaries\n\t\t}\n\t},\n\n\tscrollToPage: function (pageX, pageY, runtime) {\n\t\tvar that = this, snap;\n\n\t\tif (!that.options.snap) {\n\t\t\tthat.pageX = -Math.round(that.x / that.scrollWidth);\n\t\t\tthat.pageY = -Math.round(that.y / that.scrollHeight);\n\t\t}\n\n\t\tif (pageX == 'next') {\n\t\t\tpageX = ++that.pageX;\n\t\t} else if (pageX == 'prev') {\n\t\t\tpageX = --that.pageX;\n\t\t}\n\n\t\tif (pageY == 'next') {\n\t\t\tpageY = ++that.pageY;\n\t\t} else if (pageY == 'prev') {\n\t\t\tpageY = --that.pageY;\n");
        out.write("\t\t}\n\n\t\tpageX = -pageX*that.scrollWidth;\n\t\tpageY = -pageY*that.scrollHeight;\n\n\t\tsnap = that.snap(pageX, pageY);\n\t\tpageX = snap.x;\n\t\tpageY = snap.y;\n\n\t\tthat.scrollTo(pageX, pageY, runtime || '500ms');\n\t},\n\n\tscrollToElement: function (el, runtime) {\n\t\tel = typeof el == 'object' ? el : this.element.querySelector(el);\n\n\t\tif (!el) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\tx = that.scrollX ? -el.offsetLeft : 0,\n\t\t\ty = that.scrollY ? -el.offsetTop : 0;\n\n\t\tif (x >= 0) {\n\t\t\tx = 0;\n\t\t} else if (x < that.maxScrollX) {\n\t\t\tx = that.maxScrollX;\n\t\t}\n\n\t\tif (y >= 0) {\n\t\t\ty = 0;\n\t\t} else if (y < that.maxScrollY) {\n\t\t\ty = that.maxScrollY;\n\t\t}\n\n\t\tthat.scrollTo(x, y, runtime);\n\t},\n\n\tmomentum: function (dist, time, maxDistUpper, maxDistLower) {\n\t\tvar friction = 2.5,\n\t\t\tdeceleration = 1.2,\n\t\t\tspeed = Math.abs(dist) / time * 1000,\n\t\t\tnewDist = speed * speed / friction / 1000,\n\t\t\tnewTime = 0;\n\n\t\t// Proportinally reduce speed if we are outside of the boundaries\n\t\tif (dist > 0 && newDist > maxDistUpper) {\n\t\t\tspeed = speed * maxDistUpper / newDist / friction;\n");
        out.write("\t\t\tnewDist = maxDistUpper;\n\t\t} else if (dist < 0 && newDist > maxDistLower) {\n\t\t\tspeed = speed * maxDistLower / newDist / friction;\n\t\t\tnewDist = maxDistLower;\n\t\t}\n\n\t\tnewDist = newDist * (dist < 0 ? -1 : 1);\n\t\tnewTime = speed / deceleration;\n\n\t\treturn { dist: Math.round(newDist), time: Math.round(newTime) };\n\t},\n\n\tdestroy: function (full) {\n\t\tvar that = this;\n\n\t\twindow.removeEventListener('onorientationchange' in window ? 'orientationchange' : 'resize', that, false);\n\t\tthat.element.removeEventListener(START_EVENT, that, false);\n\t\tthat.element.removeEventListener(MOVE_EVENT, that, false);\n\t\tthat.element.removeEventListener(END_EVENT, that, false);\n\t\tdocument.removeEventListener('webkitTransitionEnd', that, false);\n\n\t\tif (that.options.checkDOMChanges) {\n\t\t\tthat.element.removeEventListener('DOMSubtreeModified', that, false);\n\t\t}\n\n\t\tif (that.scrollBarX) {\n\t\t\tthat.scrollBarX = that.scrollBarX.remove();\n\t\t}\n\n\t\tif (that.scrollBarY) {\n\t\t\tthat.scrollBarY = that.scrollBarY.remove();\n\t\t}\n\n\t\tif (full) {\n\t\t\tthat.wrapper.parentNode.removeChild(that.wrapper);\n");
        out.write("\t\t}\n\n\t\treturn null;\n\t}\n};\n\nfunction scrollbar (dir, wrapper, fade, shrink, color) {\n\tvar that = this,\n\t\tdoc = document;\n\n\tthat.dir = dir;\n\tthat.fade = fade;\n\tthat.shrink = shrink;\n\tthat.uid = ++uid;\n\n\t// Create main scrollbar\n\tthat.bar = doc.createElement('div');\n\n\tthat.bar.style.cssText = 'position:absolute;top:0;left:0;-webkit-transition-timing-function:cubic-bezier(0,0,0.25,1);pointer-events:none;-webkit-transition-duration:0;-webkit-transition-delay:0;-webkit-transition-property:-webkit-transform;z-index:10;background:' + color + ';' +\n\t\t'-webkit-transform:' + translateOpen + '0,0' + translateClose + ';' +\n\t\t(dir == 'horizontal' ? '-webkit-border-radius:3px 2px;min-width:6px;min-height:5px' : '-webkit-border-radius:2px 3px;min-width:5px;min-height:6px');\n\n\t// Create scrollbar wrapper\n\tthat.wrapper = doc.createElement('div');\n\tthat.wrapper.style.cssText = '-webkit-mask:-webkit-canvas(scrollbar' + that.uid + that.dir + ');position:absolute;z-index:10;pointer-events:none;overflow:hidden;opacity:0;-webkit-transition-duration:' + (fade ? '300ms' : '0') + ';-webkit-transition-delay:0;-webkit-transition-property:opacity;' +\n");
        out.write("\t\t(that.dir == 'horizontal' ? 'bottom:2px;left:2px;right:7px;height:5px' : 'top:2px;right:2px;bottom:7px;width:5px;');\n\n\t// Add scrollbar to the DOM\n\tthat.wrapper.appendChild(that.bar);\n\twrapper.appendChild(that.wrapper);\n}\n\nscrollbar.prototype = {\n\tinit: function (scroll, size) {\n\t\tvar that = this,\n\t\t\tdoc = document,\n\t\t\tpi = Math.PI,\n\t\t\tctx;\n\n\t\t// Create scrollbar mask\n\t\tif (that.dir == 'horizontal') {\n\t\t\tif (that.maxSize != that.wrapper.offsetWidth) {\n\t\t\t\tthat.maxSize = that.wrapper.offsetWidth;\n\t\t\t\tctx = doc.getCSSCanvasContext(\"2d\", \"scrollbar\" + that.uid + that.dir, that.maxSize, 5);\n\t\t\t\tctx.fillStyle = \"rgb(0,0,0)\";\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(2.5, 2.5, 2.5, pi/2, -pi/2, false);\n\t\t\t\tctx.lineTo(that.maxSize-2.5, 0);\n\t\t\t\tctx.arc(that.maxSize-2.5, 2.5, 2.5, -pi/2, pi/2, false);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t} else {\n\t\t\tif (that.maxSize != that.wrapper.offsetHeight) {\n\t\t\t\tthat.maxSize = that.wrapper.offsetHeight;\n\t\t\t\tctx = doc.getCSSCanvasContext(\"2d\", \"scrollbar\" + that.uid + that.dir, 5, that.maxSize);\n");
        out.write("\t\t\t\tctx.fillStyle = \"rgb(0,0,0)\";\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(2.5, 2.5, 2.5, pi, 0, false);\n\t\t\t\tctx.lineTo(5, that.maxSize-2.5);\n\t\t\t\tctx.arc(2.5, that.maxSize-2.5, 2.5, 0, pi, false);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tthat.size = Math.max(Math.round(that.maxSize * that.maxSize / size), 6);\n\t\tthat.maxScroll = that.maxSize - that.size;\n\t\tthat.toWrapperProp = that.maxScroll / (scroll - size);\n\t\tthat.bar.style[that.dir == 'horizontal' ? 'width' : 'height'] = that.size + 'px';\n\t},\n\n\tsetPosition: function (pos) {\n\t\tvar that = this;\n\n\t\tif (that.wrapper.style.opacity != '1') {\n\t\t\tthat.show();\n\t\t}\n\n\t\tpos = Math.round(that.toWrapperProp * pos);\n\n\t\tif (pos < 0) {\n\t\t\tpos = that.shrink ? pos + pos*3 : 0;\n\t\t\tif (that.size + pos < 7) {\n\t\t\t\tpos = -that.size + 6;\n\t\t\t}\n\t\t} else if (pos > that.maxScroll) {\n\t\t\tpos = that.shrink ? pos + (pos-that.maxScroll)*3 : that.maxScroll;\n\t\t\tif (that.size + that.maxScroll - pos < 7) {\n\t\t\t\tpos = that.size + that.maxScroll - 6;\n\t\t\t}\n\t\t}\n\n\t\tpos = that.dir == 'horizontal'\n\t\t\t? translateOpen + pos + 'px,0' + translateClose\n");
        out.write("\t\t\t: translateOpen + '0,' + pos + 'px' + translateClose;\n\n\t\tthat.bar.style.webkitTransform = pos;\n\t},\n\n\tshow: function () {\n\t\tif (has3d) {\n\t\t\tthis.wrapper.style.webkitTransitionDelay = '0';\n\t\t}\n\t\tthis.wrapper.style.opacity = '1';\n\t},\n\n\thide: function () {\n\t\tif (has3d) {\n\t\t\tthis.wrapper.style.webkitTransitionDelay = '350ms';\n\t\t}\n\t\tthis.wrapper.style.opacity = '0';\n\t},\n\n\tremove: function () {\n\t\tthis.wrapper.parentNode.removeChild(this.wrapper);\n\t\treturn null;\n\t}\n};\n\n// Is translate3d compatible?\nvar has3d = ('WebKitCSSMatrix' in window && 'm11' in new WebKitCSSMatrix()),\n\t// Device sniffing\n\tisIthing = (/iphone|ipad/gi).test(navigator.appVersion),\n\tisTouch = ('ontouchstart' in window),\n\t// Event sniffing\n\tSTART_EVENT = isTouch ? 'touchstart' : 'mousedown',\n\tMOVE_EVENT = isTouch ? 'touchmove' : 'mousemove',\n\tEND_EVENT = isTouch ? 'touchend' : 'mouseup',\n\t// Translate3d helper\n\ttranslateOpen = 'translate' + (has3d ? '3d(' : '('),\n\ttranslateClose = has3d ? ',0)' : ')',\n\t// Unique ID\n\tuid = 0;\n\n// Expose iScroll to the world\n");
        out.write("window.iScroll = iScroll;\n})();\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
    return false;
  }
}
